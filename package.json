{
	"name": "astra-vscode",
	"displayName": "Astra VSCode",
	"description": "Manage your DataStax Astra Cassandra databases right from VSCode!",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.52.0"
	},
	"categories": [
		"Programming Languages",
		"Other"
	],
	"activationEvents": [
		"onCommand:astra-vscode.helloWorld",
		"onCommand:astra-vscode.setServiceCredentials",
		"onCommand:astra-vscode.refreshDevOpsToken",
		"onCommand:astra-vscode.openGraphQLInWebview",
		"onCommand:astra-vscode.openSwaggerInWebview",
		"onCommand:astra-vscode.openCqlsh",
		"onCommand:astra-vscode.refreshUserDatabases",
		"onCommand:astra-vscode.connectToDatabase",
		"onCommand:astra-vscode.copyDatabaseAuthToken",
		"onCommand:astra-vscode.downloadSecureConnectBundle",
		"onCommand:astra-vscode.getTablesAndDocsInKeyspace",
		"onCommand:astra-vscode.viewDocument",
		"onCommand:astra-vscode.paginateDocuments",
		"onCommand:astra-vscode.searchDocuments",
		"onCommand:astra-vscode.parkDatabase",
		"onCommand:astra-vscode.unparkDatabase",
		"onCommand:astra-vscode.createCollection",
		"onCommand:astra-vscode.createDocument",
		"onCommand:astra-vscode.runPlayground",
		"onView:databases-view"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"viewsWelcome": [
			{
				"view": "databases-view",
				"contents": "Connect to Astra using service account credentials. [Learn more.](https://docs.astra.datastax.com/docs/manage-service-account)\n[Connect Astra](command:astra-vscode.setServiceCredentials)"
			}
		],
		"commands": [
			{
				"command": "astra-vscode.helloWorld",
				"title": "Hello World"
			},
			{
				"command": "astra-vscode.setServiceCredentials",
				"title": "Set service credentials"
			},
			{
				"command": "astra-vscode.refreshDevOpsToken",
				"title": "Refresh DevOps token"
			},
			{
				"command": "astra-vscode.refreshUserDatabases",
				"title": "Refresh databases"
			},
			{
				"command": "astra-vscode.connectToDatabase",
				"title": "Connect to database",
				"icon": {
					"light": "resources/light/plug.svg",
					"dark": "resources/dark/plug.svg"
				}
			},
			{
				"command": "astra-vscode.openUrlInBrowser",
				"title": "Open in browser"
			},
			{
				"command": "astra-vscode.openGraphQLInWebview",
				"title": "Launch GraphQL Playground"
			},
			{
				"command": "astra-vscode.openSwaggerInWebview",
				"title": "Launch Swagger UI"
			},
			{
				"command": "astra-vscode.openCqlsh",
				"title": "Launch CQL Console"
			},
			{
				"command": "astra-vscode.copyDatabaseAuthToken",
				"title": "Copy auth token"
			},
			{
				"command": "astra-vscode.downloadSecureConnectBundle",
				"title": "Download secure auth bundle"
			},
			{
				"command": "astra-vscode.getTablesAndDocsInKeyspace",
				"title": "Get tables in keyspace",
				"icon": {
					"light": "resources/light/plug.svg",
					"dark": "resources/dark/plug.svg"
				}
			},
			{
				"command": "astra-vscode.viewDocument",
				"title": "View document"
			},
			{
				"command": "astra-vscode.paginateDocuments",
				"title": "Paginate documents"
			},
			{
				"command": "astra-vscode.searchDocuments",
				"title": "Search documents",
				"icon": {
					"light": "resources/light/search.svg",
					"dark": "resources/dark/search.svg"
				}
			},
			{
				"command": "astra-vscode.parkDatabase",
				"title": "Park"
			},
			{
				"command": "astra-vscode.terminateDatabase",
				"title": "Terminate"
			},
			{
				"command": "astra-vscode.unparkDatabase",
				"title": "Unpark"
			},
			{
				"command": "astra-vscode.createCollection",
				"title": "Create collection",
				"icon": "$(diff-insert)"
			},
			{
				"command": "astra-vscode.createDocument",
				"title": "Create document",
				"icon": "$(diff-insert)"
			},
			{
				"command": "astra-vscode.runPlayground",
				"title": "Run playground",
				"icon": "$(run)"
			}
		],
		"views": {
			"astra-extension-container": [
				{
					"id": "databases-view",
					"name": "Databases"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "astra-extension-container",
					"title": "DataStax Astra",
					"icon": "resources/cassandra.svg"
				}
			]
		},
		"menus": {
			"editor/title": [
				{
					"command": "astra-vscode.runPlayground",
					"group": "navigation",
					"when": "editorLangId == cql"
				}
			],
			"view/item/context": [
				{
					"command": "astra-vscode.connectToDatabase",
					"when": "view == databases-view && viewItem == active-database",
					"group": "inline"
				},
				{
					"command": "astra-vscode.getTablesAndDocsInKeyspace",
					"when": "view == databases-view && viewItem == connectable-keyspace",
					"group": "inline"
				},
				{
					"command": "astra-vscode.searchDocuments",
					"when": "view == databases-view && viewItem == documents",
					"group": "inline"
				},
				{
					"command": "astra-vscode.parkDatabase",
					"when": "view == databases-view && viewItem == active-database"
				},
				{
					"command": "astra-vscode.terminateDatabase",
					"when": "view == databases-view && viewItem == active-database"
				},
				{
					"command": "astra-vscode.parkDatabase",
					"when": "view == databases-view && viewItem == connected-database"
				},
				{
					"command": "astra-vscode.terminateDatabase",
					"when": "view == databases-view && viewItem == connected-database"
				},
				{
					"command": "astra-vscode.terminateDatabase",
					"when": "view == databases-view && viewItem == parked-database"
				},
				{
					"command": "astra-vscode.unparkDatabase",
					"when": "view == databases-view && viewItem == parked-database"
				},
				{
					"command": "astra-vscode.createCollection",
					"when": "view == databases-view && viewItem == connected-keyspace",
					"group": "inline"
				},
				{
					"command": "astra-vscode.createDocument",
					"when": "view == databases-view && viewItem == documents",
					"group": "inline"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack --config ./build/node-extension.webpack.config.js",
		"watch": "webpack --watch --config ./build/node-extension.webpack.config.js",
		"package": "webpack --mode production --devtool hidden-source-map --config ./build/node-extension.webpack.config.js",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "npm run test-compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.52.0",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"eslint": "^7.15.0",
		"@typescript-eslint/eslint-plugin": "^4.9.0",
		"@typescript-eslint/parser": "^4.9.0",
		"glob": "^7.1.6",
		"mocha": "^8.1.3",
		"typescript": "^4.1.2",
		"vscode-test": "^1.4.1",
		"ts-loader": "^8.0.11",
		"webpack": "^5.10.0",
		"webpack-cli": "^4.2.0"
	},
	"dependencies": {
		"cassandra-driver": "^4.6.1",
		"cross-fetch": "^3.0.6"
	}
}